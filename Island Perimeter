class Solution {
    public int islandPerimeter(int[][] grid) {
          int perimeter = 0;
        int rows = grid.length;
        int cols = grid[0].length;

        // Directions for up, down, left, right
        int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (grid[i][j] == 1) {
                    // For each land cell, check its adjacent cells
                    for (int[] dir : directions) {
                        int newRow = i + dir[0];
                        int newCol = j + dir[1];

                        // Check if adjacent cell is out of bounds or water
                        if (newRow < 0 || newRow >= rows || newCol < 0 || newCol >= cols || grid[newRow][newCol] == 0) {
                            perimeter++;
                        }
                    }
                }
            }
        }

        return perimeter;
        
    }
}
