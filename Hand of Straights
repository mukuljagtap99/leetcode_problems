class Solution {
    public boolean isNStraightHand(int[] hand, int groupSize) {
         if (hand.length % groupSize != 0) {
            return false;
        }

        // Count the frequency of each card
        TreeMap<Integer, Integer> freqMap = new TreeMap<>();
        for (int card : hand) {
            freqMap.put(card, freqMap.getOrDefault(card, 0) + 1);
        }

        // Try to form groups
        while (!freqMap.isEmpty()) {
            int firstCard = freqMap.firstKey();
            for (int i = 0; i < groupSize; i++) {
                int currentCard = firstCard + i;
                if (!freqMap.containsKey(currentCard)) {
                    return false;
                }
                int count = freqMap.get(currentCard);
                if (count == 1) {
                    freqMap.remove(currentCard);
                } else {
                    freqMap.put(currentCard, count - 1);
                }
            }
        }

        return true;
    }
}
