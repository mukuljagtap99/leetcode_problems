class Solution {
    public int[] deckRevealedIncreasing(int[] deck) {
        int n = deck.length;
        Arrays.sort(deck); // Sort the deck in increasing order
        Queue<Integer> indexQueue = new LinkedList<>();

        // Initialize the index queue with the indices of the deck
        for (int i = 0; i < n; i++) {
            indexQueue.offer(i);
        }

        int[] result = new int[n];
        for (int card : deck) {
            result[indexQueue.poll()] = card; // Reveal the top card
            if (!indexQueue.isEmpty()) {
                indexQueue.offer(indexQueue.poll()); // Put the next top card at the bottom
            }
        }

        return result;
        
    }
}
